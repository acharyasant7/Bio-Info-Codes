#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug 23 09:15:03 2020

@author: sandesh
"""

#This code returns the theoritical spectrum of a cyclic peptide. The general algorithm is
#create all possible combinations of peptide in cycle form and then calculate their mass. 
def TheorSpectrum(Massintegertable, Peptide):
    
    spec = [0, sum([int(Massintegertable[protein]) for protein in Peptide])]
    
    Peptides = Peptide *2
    
    for i in range(0, len(Peptide)):
        for j in range(1, len(Peptide)):
            mass = 0
            for p in Peptides[i: i+j]:
                mass += int(Massintegertable[p])
            spec.append(mass)
    spec.sort()
    return spec
    

Massintegertable = {
    'G': 57, 'A': 71, 'S': 87, 'P': 97, 'V': 99,
    'T':101, 'C': 103, 'I': 113, 'L':113, 'N':114,
    'D': 115, 'K': 128, 'Q': 128, 'E': 129, 'M': 131,
    'H': 127, 'F': 147, 'R': 158, 'Y': 163, 'W':186}

Peptide = "LEQN"

print(TheorSpectrum(Massintegertable, Peptide))
